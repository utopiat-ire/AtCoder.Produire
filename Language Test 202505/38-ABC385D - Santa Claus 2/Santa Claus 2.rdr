//https://github.com/utopiat-ire/AtCoder.Produire
※コンソール
※コンパイル
コンソールで聞いて「 」で区切って{【N:整数】,【M:整数】,【Sx:長整数】,【Sy:長整数】}とみなす
【H】という長整数の配列の辞書を作る
【W】という長整数の配列の辞書を作る
N回繰り返す
	コンソールで聞いて「 」で区切って{【X:長整数】,【Y:長整数】}とみなす
	HにYが存在しなければ、長整数の配列を作ってH(Y)とする
	H(Y)にXを加える
	WにXが存在しなければ、長整数の配列を作ってW(X)とする
	W(X)にYを加える
そして
Wの見出し一覧を【見出し:長整数】にそれぞれ繰り返す
	W(見出し)を並べ替える
そして
Hの見出し一覧を【見出し:長整数】にそれぞれ繰り返す
	H(見出し)を並べ替える
そして
【解答:整数】=0
M回繰り返す
	コンソールで聞いて「 」で区切って{【C:文字列】,【D:長整数】}とみなす
	Cが「U」またはCが「D」なら
		【Cy:長整数】=Sy
		Cが「U」ならSy=Sy+D。s=Cy。t=Sy
		他ならSy=Sy-D。s=Sy。t=Cy
		WにSxが存在すれば
			【offset】=0
			【番号】に1からW(Sx)の個数まで繰り返す
				【要素:長整数】=W(Sx)の(番号-offset)番目
				要素がtより大きければ出る
				要素がs以上なら
					解答=解答+1
					W(Sx)から(番号-offset)番目を消す
					offset=offset+1
					H(要素)からSxを探して消す
				そして
			そして
		そして
	他でCが「L」またはCが「R」なら
		【Cx:長整数】=Sx
		Cが「L」ならSx=Sx-D。s=Sx。t=Cx
		他ならSx=Sx+D。s=Cx。t=Sx
		HにSyが存在すれば
			【offset】=0
			【番号】に1からH(Sy)の個数まで繰り返す
				【要素:長整数】=H(Sy)の(番号-offset)番目
				要素がtより大きければ出る
				要素がs以上なら
					解答=解答+1
					H(Sy)から(番号-offset)番目を消す
					offset=offset+1
					W(要素)からSyを探して消す
				そして
			そして
		そして
	そして
そして

コンソールへ「[Sx] [Sy] [解答]」を出力して改行する

【配列:長整数の配列】から、【要素:長整数】を探して消す手順
	配列から要素をひとつ探して【結果】とする
	結果が-1でなければ配列から(結果)番目を消す
終わり
